version: '3.7'

services:
  redis:
    image: 'redis:6-alpine'
    command: redis-server --appendonly yes
    healthcheck:
      test: redis-cli ping
    restart: unless-stopped
    volumes:
      - ./redis/data:/data
    logging: &logging
      driver: journald
      options:
        tag: {% raw %}'{{.Name}}'{% endraw %}

  db:
    image: 'postgres:13.3-alpine'
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} || exit 1
    restart: unless-stopped
    env_file: ./.env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./db/data:/var/lib/postgresql/data
    logging:
      <<: *logging

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    image: {{cookiecutter.django_project_name}}/app
    healthcheck:
      test: wget -q --spider 127.0.0.1:8000/admin/login/ || exit 1
    init: true
    restart: unless-stopped
    env_file: ./.env
    volumes:
      - backend-static:/root/src/static
      - ./media:/root/src/media
    links:
      - redis:redis
    depends_on:
      - redis
      - db
    logging:
      <<: *logging

  {% if cookiecutter.use_celery == "y" -%}
  celery-worker:
    image: {{cookiecutter.django_project_name}}/app
    init: true
    healthcheck:
      test: celery -A {{cookiecutter.django_project_name}} status --quiet || exit 1
    restart: unless-stopped
    env_file: ./.env
    environment:
      - DEBUG=off
    command: ./celery-entrypoint.sh
    tmpfs: /run
    links:
      - redis:redis
    depends_on:
      - redis
    logging:
      <<: *logging

  celery-beat:
    image: {{cookiecutter.django_project_name}}/app
    init: true
    restart: unless-stopped
    env_file: ./.env
    environment:
      - DEBUG=off
    command: celery -A {{cookiecutter.django_project_name}} beat -l INFO --schedule /tmp/celerybeat-schedule -f /tmp/logs/celery-beat.log
    volumes:
      - ./logs:/tmp/logs
    links:
      - redis:redis
    depends_on:
      - redis
    logging:
      <<: *logging

  {% if cookiecutter.use_flower == "y" -%}
  celery-flower:
    image: {{cookiecutter.django_project_name}}/app
    healthcheck:
      test: wget --user ${CELERY_FLOWER_USER} --password ${CELERY_FLOWER_PASSWORD} -qO- 127.0.0.1:5555 > /dev/null || exit 1
    init: true
    restart: unless-stopped
    env_file: ./.env
    environment:
      - DEBUG=off
    command: celery flower --app={{cookiecutter.django_project_name}} --broker="${CELERY_BROKER_URL}" --basic_auth="${CELERY_FLOWER_USER}:${CELERY_FLOWER_PASSWORD}"
    depends_on:
      - celery-worker
    ports:
      - 5555:5555
    logging:
      <<: *logging
  {% endif %}
  {% endif -%}

  nginx:
    image: 'nginx:stable-alpine'
    restart: unless-stopped
    healthcheck:
      test: wget -q --spider 0.0.0.0:80/admin/login/ || exit 1
    environment:
      - NGINX_HOST=${NGINX_HOST}
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - backend-static:/srv/static:ro
      - ./media:/srv/media:ro
      {% if cookiecutter.use_https == 'y' -%}
      - ./letsencrypt/etc:/etc/letsencrypt
      - ./letsencrypt/data:/data/letsencrypt
      {% else -%}
      # uncomment for letsencrypt https
      # - ./letsencrypt/etc:/etc/letsencrypt
      # - ./letsencrypt/data:/data/letsencrypt
      {%- endif %}
    links:
      - app:app
    command: nginx -g 'daemon off;'
    ports:
      - 80:80
      {% if cookiecutter.use_https == 'y' -%}
      - 443:443
      {% else -%}
      # uncomment for letsencrypt https
      # - 443:443
      {%- endif %}
    logging:
      <<: *logging

volumes:
  backend-static:
